<?php

namespace App\Filament\Resources\PackageResource\Forms;

use Filament\Actions\Action;
use Filament\Forms\Components\{Card, Grid, Repeater, Section, Select, TagsInput, Textarea, TextInput};

class MenuField
{
    public static function make(): array
    {
        return [
            Repeater::make('menus')
                ->relationship()
                ->schema([
                    Grid::make(3)
                        ->schema([
                            TextInput::make('name')
                                ->label('T√™n menu')
                                ->placeholder('Nh·∫≠p t√™n menu...')
                                ->required()
                                ->maxLength(100)
                                ->helperText('VD: Menu 1')
                                ->columnSpan(2),

                            Select::make('type')
                                ->label('Lo·∫°i b·ªØa ƒÉn')
                                ->options([
                                    'breakfast' => 'üåÖ B·ªØa s√°ng',
                                    'lunch' => 'üåû B·ªØa tr∆∞a',
                                    'dinner' => 'üåô B·ªØa t·ªëi',
                                    'snack' => 'üçø ƒÇn v·∫∑t',
                                ])
                                ->native(false)
                                ->required()
                                ->columnSpan(1),
                        ]),

                    Textarea::make('description')
                        ->label('M√¥ t·∫£ b·ªØa ƒÉn')
                        ->placeholder('M√¥ t·∫£ chi ti·∫øt v·ªÅ b·ªØa ƒÉn, ƒë·∫∑c ƒëi·ªÉm n·ªïi b·∫≠t...')
                        ->rows(3)
                        ->maxLength(500)
                        ->helperText('M√¥ t·∫£ s·∫Ω hi·ªÉn th·ªã cho kh√°ch h√†ng'),

                    // Menu Options Section
                    Section::make('Th·ª±c ƒë∆°n & Combo')
                        ->description('Qu·∫£n l√Ω c√°c combo v√† m√≥n ƒÉn trong b·ªØa ƒÉn')
                        ->schema([
                            Repeater::make('options')
                                ->relationship()
                                ->schema([
                                    // Combo Information
                                    Card::make()
                                        ->schema([
                                            Grid::make(2)
                                                ->schema([
                                                    TextInput::make('name')
                                                        ->label('T√™n combo/set')
                                                        ->placeholder('VD: Combo S√°ng Truy·ªÅn Th·ªëng')
                                                        ->required()
                                                        ->maxLength(150)
                                                        ->prefixIcon('heroicon-m-bookmark')
                                                        ->columnSpan(1),

                                                    TextInput::make('price')
                                                        ->label('Gi√° combo')
                                                        ->placeholder('VD: 50000')
                                                        ->numeric()
                                                        ->prefix('‚Ç´')
                                                        ->minValue(0)
                                                        ->columnSpan(1),
                                                ]),

                                            Textarea::make('description')
                                                ->label('M√¥ t·∫£ combo')
                                                ->placeholder('M√¥ t·∫£ chi ti·∫øt v·ªÅ combo, nguy√™n li·ªáu, c√°ch ch·∫ø bi·∫øn...')
                                                ->rows(3)
                                                ->maxLength(500)
                                                ->helperText('Th√¥ng tin n√†y s·∫Ω hi·ªÉn th·ªã cho kh√°ch h√†ng'),
                                        ]),

                                    // Menu Items Section
                                    Section::make('Danh s√°ch m√≥n ƒÉn')
                                        ->description('C√°c m√≥n ƒÉn trong combo n√†y')
                                        ->schema([
                                            Repeater::make('items')
                                                ->relationship()
                                                ->schema([
                                                    Card::make()
                                                        ->schema([
                                                            Grid::make(4)
                                                                ->schema([
                                                                    TextInput::make('name')
                                                                        ->label('T√™n m√≥n')
                                                                        ->placeholder('VD: Ph·ªü b√≤ t√°i')
                                                                        ->required()
                                                                        ->maxLength(100)
                                                                        ->prefixIcon('heroicon-m-cake')
                                                                        ->columnSpan(2),

                                                                    TextInput::make('quantity')
                                                                        ->label('S·ªë l∆∞·ª£ng')
                                                                        ->numeric()
                                                                        ->default(1)
                                                                        ->minValue(1)
                                                                        ->maxValue(20)
                                                                        ->columnSpan(1),

                                                                    Select::make('unit')
                                                                        ->label('ƒê∆°n v·ªã')
                                                                        ->options([
                                                                            'bowl' => 'ü•£ T√¥',
                                                                            'plate' => 'üçΩÔ∏è ƒêƒ©a',
                                                                            'cup' => '‚òï Ly',
                                                                            'piece' => 'üî¢ C√°i',
                                                                            'portion' => 'üç± Ph·∫ßn',
                                                                            'bottle' => 'üçæ Chai',
                                                                            'glass' => 'ü•õ C·ªëc',
                                                                        ])
                                                                        ->native(false)
                                                                        ->columnSpan(1),
                                                                ]),
                                                        ])
                                                ])
                                                ->itemLabel(function (array $state): ?string {
                                                    $name = $state['name'] ?? '';
                                                    $quantity = $state['quantity'] ?? 1;
                                                    $unit = $state['unit'] ?? '';

                                                    if (empty($name)) return 'M√≥n ƒÉn m·ªõi';

                                                    $unitLabels = [
                                                        'bowl' => 't√¥',
                                                        'plate' => 'ƒëƒ©a',
                                                        'cup' => 'ly',
                                                        'piece' => 'c√°i',
                                                        'portion' => 'ph·∫ßn',
                                                        'bottle' => 'chai',
                                                        'glass' => 'c·ªëc',
                                                    ];

                                                    $unitText = $unitLabels[$unit] ?? $unit;
                                                    return "{$name} ({$quantity} {$unitText})";
                                                })
                                                ->addActionLabel('‚ûï Th√™m m√≥n ƒÉn')

                                                ->reorderableWithButtons()
                                                ->collapsible()
                                                ->defaultItems(1)
                                                ->minItems(1)
                                        ])
                                        ->collapsible()
                                        ->persistCollapsed(false)
                                ])
                                ->itemLabel(function (array $state): ?string {
                                    $name = $state['name'] ?? '';
                                    $price = $state['price'] ?? '';
                                    $available = $state['is_available'] ?? true;

                                    if (empty($name)) return 'Combo m·ªõi';

                                    $status = $available ? '‚úÖ' : '‚ùå';
                                    $priceText = $price ? number_format($price) . '‚Ç´' : '';

                                    return "{$status} {$name}" . ($priceText ? " - {$priceText}" : '');
                                })
                                ->addActionLabel('‚ûï Th√™m combo m·ªõi')

                                ->reorderableWithButtons()
                                ->collapsible()
                                ->defaultItems(1)
                                ->minItems(1)
                        ])
                        ->collapsible()
                        ->persistCollapsed(false)
                ])
                ->itemLabel(function (array $state): ?string {
                    $name = $state['name'] ?? '';
                    $type = $state['type'] ?? '';

                    if (empty($name)) return 'B·ªØa ƒÉn m·ªõi';

                    $typeLabels = [
                        'breakfast' => 'üåÖ S√°ng',
                        'lunch' => 'üåû Tr∆∞a',
                        'dinner' => 'üåô T·ªëi',
                        'snack' => 'üçø V·∫∑t',
                    ];

                    $typeText = $typeLabels[$type] ?? $type;
                    return "{$name} - {$typeText}";
                })
                ->addActionLabel('‚ûï Th√™m b·ªØa ƒÉn m·ªõi')

                ->reorderableWithButtons()
                ->collapsible()
                ->defaultItems(1)
                ->minItems(1)
                ->helperText('üìã Qu·∫£n l√Ω to√†n b·ªô th·ª±c ƒë∆°n theo t·ª´ng b·ªØa ƒÉn. M·ªói b·ªØa ƒÉn c√≥ th·ªÉ c√≥ nhi·ªÅu combo kh√°c nhau.')
                ->columnSpanFull()
        ];
    }
}